{"version":3,"names":[],"mappings":"","sources":["core.js"],"sourcesContent":["try {\r\n  var $ = jQuery;\r\n\r\n  $(function () {\r\n\r\n      window.addEventListener('load', AOS.refresh);\r\n\r\n//      Exemple ajax requete\r\n//       /**\r\n//        * Modification des informations du compte utilsateur\r\n//        */\r\n//       $('body').on('click', '#btn-update-user', function (e) {\r\n//           e.preventDefault();\r\n//           e.stopPropagation();\r\n//\r\n//           /**\r\n//            * Prevent default action, so when user clicks button he doesn't navigate away from page\r\n//            */\r\n//           if (event.preventDefault) {\r\n//               event.preventDefault();\r\n//           } else {\r\n//               event.returnValue = false;\r\n//           }\r\n//\r\n//\r\n//           $('form#update-form p.status').show().text(ajax_pre_register.loadingmessage);\r\n//\r\n//           // Collect data from inputs\r\n//           var reg_nonce = $('#vb_maj_user_nonce').val();\r\n//           var reg_user = $('#vb_username').val();\r\n//           var reg_pass = $('#vb_pass').val();\r\n//           var vb_username = $('#vb_username').val();\r\n//\r\n//           var reg_civility = $('#vb_civility').val();\r\n//           var reg_name = $('#vb_name').val();\r\n//           var reg_firstname = $('#vb_firstname').val();\r\n//           var reg_company = $('#vb_company').val();\r\n//           var reg_mail = $('#vb_email').val();\r\n//           var reg_phone = $('#vb_phone').val();\r\n//\r\n//           /**\r\n//            * AJAX URL where to send data\r\n//            * (from localize_script)\r\n//            */\r\n//           var ajax_url = vb_reg_vars.vb_ajax_url;\r\n//\r\n//           // Data to send\r\n//           var data = {\r\n//               action: 'update_user',\r\n//               nonce: reg_nonce,\r\n//               //pass: reg_pass,\r\n//               mail: reg_mail,\r\n//               name: reg_name,\r\n//               //user: vb_username,\r\n//               civility : reg_civility,\r\n//               firstname : reg_firstname,\r\n//               company : reg_company,\r\n//               phone : reg_phone\r\n//           };\r\n//\r\n// // Do AJAX request\r\n//           $.post(ajax_url, data, function (response) {\r\n//\r\n//               // If we have response\r\n//               if (response) {\r\n//\r\n//                   if (response === '1') {\r\n//                       // If user is created\r\n//                       $('form#update-form p.status').show().text('Update profile successfully. Reload...');\r\n//\r\n//                       setTimeout(function () {\r\n//                           location.reload();\r\n//                       }, 1000);\r\n//                   } else {\r\n//\r\n//                       $('form#update-form p.status').show().text(response);\r\n//                   }\r\n//               }\r\n//           });\r\n//       });\r\n\r\n    $('.lazyload').lazy();\r\n\r\n    var sayWho = function () {\r\n\r\n      navigator.sayswho = (function () {\r\n        var ua = navigator.userAgent, tem,\r\n          M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n        if (/trident/i.test(M[1])) {\r\n          tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n          return 'IE ' + (tem[1] || '');\r\n        }\r\n        if (M[1] === 'Chrome') {\r\n          tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\r\n          if (tem != null)\r\n            return tem.slice(1).join(' ').replace('OPR', 'Opera');\r\n        }\r\n        M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n        if ((tem = ua.match(/version\\/(\\d+)/i)) != null)\r\n          M.splice(1, 1, tem[1]);\r\n        return M.join(' ');\r\n      })();\r\n      var who = navigator.sayswho.split(\" \");\r\n      var browser = who[0].toLowerCase();\r\n      var version = parseInt(who[1]);\r\n\r\n      $(\"body\").addClass(browser);\r\n      $(\"body\").addClass(browser + version);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n      /*\r\n  *  new_map\r\n  *\r\n  *  This function will render a Google Map onto the selected jQuery element\r\n  *\r\n  *  @type\tfunction\r\n  *  @date\t8/11/2013\r\n  *  @since\t4.3.0\r\n  *\r\n  *  @param\t$el (jQuery element)\r\n  *  @return\tn/a\r\n  */\r\n\r\n      function new_map( $el ) {\r\n\r\n          // var\r\n          var $markers = $el.find('.marker');\r\n\r\n\r\n          // vars\r\n          var args = {\r\n              zoom\t\t: 16,\r\n              center\t\t: new google.maps.LatLng(0, 0),\r\n              mapTypeId\t: google.maps.MapTypeId.ROADMAP\r\n          };\r\n\r\n\r\n          // create map\r\n          var map = new google.maps.Map( $el[0], args);\r\n\r\n\r\n          // add a markers reference\r\n          map.markers = [];\r\n\r\n\r\n          // add markers\r\n          $markers.each(function(){\r\n\r\n              add_marker( $(this), map );\r\n\r\n          });\r\n\r\n\r\n          // center map\r\n          center_map( map );\r\n\r\n\r\n          // return\r\n          return map;\r\n\r\n      }\r\n\r\n      /*\r\n      *  add_marker\r\n      *\r\n      *  This function will add a marker to the selected Google Map\r\n      *\r\n      *  @type\tfunction\r\n      *  @date\t8/11/2013\r\n      *  @since\t4.3.0\r\n      *\r\n      *  @param\t$marker (jQuery element)\r\n      *  @param\tmap (Google Map object)\r\n      *  @return\tn/a\r\n      */\r\n\r\n      function add_marker( $marker, map ) {\r\n\r\n          // var\r\n          var latlng = new google.maps.LatLng( $marker.attr('data-lat'), $marker.attr('data-lng') );\r\n\r\n          // create marker\r\n          var marker = new google.maps.Marker({\r\n              position\t: latlng,\r\n              icon: 'http://site-40613.ciplus.beta-nd.com/wp-content/themes/ciplus/images/marker.png',\r\n              map\t\t\t: map\r\n          });\r\n\r\n          // add to array\r\n          map.markers.push( marker );\r\n\r\n          // if marker contains HTML, add it to an infoWindow\r\n          if( $marker.html() )\r\n          {\r\n              // create info window\r\n              var infowindow = new google.maps.InfoWindow({\r\n                  content\t\t: $marker.html()\r\n              });\r\n\r\n              // show info window when marker is clicked\r\n              google.maps.event.addListener(marker, 'click', function() {\r\n\r\n                  infowindow.open( map, marker );\r\n\r\n              });\r\n          }\r\n\r\n      }\r\n\r\n      /*\r\n      *  center_map\r\n      *\r\n      *  This function will center the map, showing all markers attached to this map\r\n      *\r\n      *  @type\tfunction\r\n      *  @date\t8/11/2013\r\n      *  @since\t4.3.0\r\n      *\r\n      *  @param\tmap (Google Map object)\r\n      *  @return\tn/a\r\n      */\r\n\r\n      function center_map( map ) {\r\n\r\n          // vars\r\n          var bounds = new google.maps.LatLngBounds();\r\n\r\n          // loop through all markers and create bounds\r\n          $.each( map.markers, function( i, marker ){\r\n\r\n              var latlng = new google.maps.LatLng( marker.position.lat(), marker.position.lng() );\r\n\r\n              bounds.extend( latlng );\r\n\r\n          });\r\n\r\n          // only 1 marker?\r\n          if( map.markers.length == 1 )\r\n          {\r\n              // set center of map\r\n              map.setCenter( bounds.getCenter() );\r\n              map.setZoom( 16 );\r\n          }\r\n          else\r\n          {\r\n              // fit to bounds\r\n              map.fitBounds( bounds );\r\n          }\r\n\r\n      }\r\n\r\n      function smoothScroll()\r\n      {\r\n\r\n          $(\"a[href*='#']\").on('click', function (event) {\r\n\r\n              // Make sure this.hash has a value before overriding default behavior\r\n              if (this.hash !== \"\") {\r\n                  // Prevent default anchor click behavior\r\n                  event.preventDefault();\r\n\r\n                  // Store hash\r\n                  var hash = this.hash;\r\n\r\n                  // Using jQuery's animate() method to add smooth page scroll\r\n                  // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area\r\n                  $('html, body').animate({\r\n                      scrollTop: $(hash).offset().top\r\n                  }, 800, function () {\r\n\r\n                      // Add hash (#) to URL when done scrolling (default click behavior)\r\n                      //window.location.hash = hash;\r\n                  });\r\n              }\r\n          });\r\n      }\r\n\r\n      var map = null;\r\n\r\n      var cible = $('.bloc-numbers.blocs.section')[0];\r\n\r\n      var options = {\r\n          threshold: 0.5 /* 50% */\r\n      };\r\n\r\n      var observer = new IntersectionObserver(\r\n          onIntersection,\r\n          options\r\n      );\r\n\r\n\r\n\r\n      $(document).ready(function(){\r\n\r\n          console.log(\"%cCreated with ‚ù§\", 'color:red');\r\n\r\n          AOS.init();\r\n\r\n          $('.acf-map').each(function(){\r\n              // create map\r\n              map = new_map( $(this) );\r\n          });\r\n\r\n\r\n          //lance l'observer\r\n          if(cible)\r\n          {\r\n              observer.observe(cible);\r\n          }\r\n\r\n\r\n\r\n          //fix pour mettre en gras le dernier mot d'un titre\r\n          // $('.titre--blue').html(function(){\r\n          //\r\n          //     if(!$(this).find('strong')[0]) {\r\n          //         console.log(\"not strong\")\r\n          //         var text= $(this).text().trim().split(\" \");\r\n          //         console.log(\"text :\",text)\r\n          //         var last = text.pop();\r\n          //         console.log(last)\r\n          //         console.log(text.length)\r\n          //         return text.join(\" \") + \" <strong>\" + last + \"</strong>\";\r\n          //     }\r\n          //\r\n          // });\r\n          \r\n          //autofix size \r\n          // var containers = $('.container-size-auto-js')\r\n          //\r\n          // containers.each(function () {\r\n          //     var elems = $(this).find('.elem-size-auto-js')\r\n          //     var cpt = 0\r\n          //     var height = 0\r\n          //\r\n          //     elems.each(function () {\r\n          //         cpt++\r\n          //\r\n          //         console.log(this.getBoundingClientRect().height);\r\n          //         if(this.getBoundingClientRect().height > height) {\r\n          //             height = this.getBoundingClientRect().height\r\n          //         }\r\n          //\r\n          //         if(cpt === elems.length) {\r\n          //             elems.css({\"height\":height+\"px\"})\r\n          //         }\r\n          //     })\r\n          // })\r\n\r\n      });\r\n\r\n      //anim de l'incr√©mentation des chiffres\r\n      function onIntersection(entries) {\r\n          var target;\r\n          entries.forEach(function(entry) {\r\n              if (entry.intersectionRatio > 0.5) {\r\n\r\n\r\n\r\n              observer.unobserve(cible);\r\n          }\r\n      })\r\n\r\n      }\r\n\r\n    sayWho();\r\n\r\n  smoothScroll();\r\n\r\n  });\r\n\r\n\r\n}\r\ncatch (err) {\r\n  console.log(err);\r\n}"],"file":"core.js"}